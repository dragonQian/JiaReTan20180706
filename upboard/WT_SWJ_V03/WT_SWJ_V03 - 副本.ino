/************************************
**Program ID:WT2_SWJ
**Cpu ID: Atmega328P
**Software Ver:0.3
**Hardware Ver:0.3
**program by zhengkai
**lasting Update:20180525
**ADD LOGO
***************************************/
#include <OneWire.h>
#include <DallasTemperature.h>
#include <U8glib.h>

float get_temp;
float serial_temp;

//static unsigned char u8g_logo_bits[] = {
static unsigned char u8g_logo_bits[] U8G_PROGMEM = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x70,0x00,0x00,
0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x70,0xF8,0x1F,
0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x70,0xF8,0x1F,
0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x70,0x18,0x18,
0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x19,0x18,
0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xF9,0x1F,
0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0xF8,0x1F,
0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x18,0x18,
0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x18,0x18,
0x00,0x0F,0xC0,0x3F,0x80,0xC7,0x7F,0xE0,0xF1,0x0B,0x00,0xFF,0x01,0x70,0xF8,0x1F,
0x00,0x0F,0xF0,0xFF,0x80,0xEF,0xFF,0xE0,0xFB,0x1F,0x00,0xFF,0x07,0x70,0xF8,0x1F,
0x00,0x0F,0xF8,0xFF,0x81,0xFF,0xFF,0xE1,0xFF,0x3F,0xC0,0xFF,0x0F,0xF8,0x01,0x00,
0x00,0x0F,0xFC,0xFF,0x83,0xFF,0xFF,0xE3,0xFF,0x7F,0xE0,0xFF,0x1F,0xFE,0xFC,0x7F,
0x00,0x0F,0x7E,0xF8,0x87,0xFF,0xFF,0xE3,0x0F,0x7E,0xF0,0xC3,0x1F,0x1E,0xFE,0x7F,
0x00,0x0F,0x3F,0xF0,0x87,0x7F,0xF8,0xE7,0x07,0xFC,0xF8,0x81,0x3F,0x00,0xFE,0x7F,
0x00,0x0F,0x1F,0xE0,0x87,0x3F,0xF0,0xE7,0x07,0xFC,0xF8,0x00,0x3F,0x00,0x00,0x00,
0x00,0x0F,0x0F,0xC0,0x87,0x3F,0xE0,0xE7,0x03,0xF8,0x79,0x00,0x3E,0xC0,0x00,0x00,
0x00,0x0F,0x0E,0xC0,0x87,0x1F,0xC0,0xE7,0x01,0xF0,0x79,0x00,0x3E,0xC0,0x80,0x03,
0x00,0x0F,0x00,0xFC,0x87,0x0F,0x80,0xE7,0x01,0xF0,0x01,0xC0,0x3F,0xE0,0xC1,0x01,
0x00,0x0F,0xC0,0xFF,0x87,0x0F,0x80,0xE7,0x01,0xF0,0x01,0xFC,0x3F,0xF8,0xE7,0x00,
0x00,0x0F,0xFC,0xFF,0x87,0x0F,0x80,0xE7,0x01,0xF0,0xC1,0xFF,0x3F,0xF8,0xF7,0x3F,
0x00,0x0F,0xFF,0xFF,0x87,0x0F,0x80,0xE7,0x01,0xF0,0xF1,0xFF,0x3F,0xD8,0xF6,0x3F,
0x00,0x0F,0xFF,0xCF,0x87,0x0F,0x80,0xE7,0x01,0xF0,0xF9,0x7F,0x3E,0xD8,0x76,0x38,
0x00,0x8F,0x7F,0xC0,0x87,0x0F,0x80,0xE7,0x01,0xF0,0xF9,0x03,0x3E,0xD8,0x76,0x38,
0x00,0x8F,0x1F,0xC0,0x87,0x1F,0xC0,0xE7,0x03,0xF8,0xF9,0x00,0x3E,0xD8,0xF6,0x3F,
0x00,0x8F,0x0F,0xC0,0x87,0x1F,0xC0,0xE7,0x03,0xF8,0x79,0x00,0x3E,0xD8,0xF6,0x3F,
0x00,0x8F,0x0F,0xC0,0x87,0x3F,0xE0,0xE7,0x07,0x7C,0x78,0x00,0x3F,0xD8,0xF6,0x3F,
0x00,0x8F,0x0F,0xE0,0x87,0x7F,0xF0,0xE7,0x0F,0x7E,0x78,0x00,0x3F,0xD8,0x76,0x38,
0x00,0x8F,0x1F,0xF8,0x87,0xFF,0xFF,0xE3,0xFF,0x3F,0xF8,0xC0,0x3F,0xD8,0x76,0x38,
0x00,0x8F,0x3F,0xFC,0x87,0xFF,0xFF,0xE1,0xFF,0x1F,0xF8,0xE1,0x3F,0xD8,0x76,0x38,
0x00,0x0F,0xFF,0xFF,0x8F,0xFF,0xFF,0xE0,0xFF,0x0F,0xF0,0xFF,0x7F,0xC0,0xF0,0x3F,
0x00,0x0F,0xFE,0xBF,0x8F,0xCF,0x7F,0xE0,0xF9,0x07,0xE0,0xFF,0x7C,0xC0,0xF0,0x3F,
0x00,0x0F,0xFC,0xDF,0x8F,0x8F,0x3F,0xE0,0xF1,0x03,0xC0,0x3F,0x7C,0xC0,0xF0,0x3F,
0x00,0x0F,0xF0,0x07,0x80,0x0F,0x00,0xE0,0x01,0x00,0x80,0x3F,0x7C,0xC0,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0x3F,0x10,0x87,0xE1,0x7F,0xCE,0x79,0x8E,0x9F,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0x1C,0x87,0xCC,0x7F,0xC6,0x1C,0x26,0x87,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0x7F,0x4E,0x93,0xFC,0x7F,0xC6,0x0C,0x27,0xC3,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0x7F,0x4E,0xC3,0xF8,0x7F,0x52,0x2E,0x33,0xCB,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0x7F,0x4E,0xC9,0xF1,0x7F,0x52,0x3E,0x33,0xCF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0x7F,0x4E,0xC9,0x63,0xC0,0x18,0x3F,0x33,0xCF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0x7F,0x4E,0xCC,0x67,0xC0,0x18,0x9F,0x93,0xE7,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0x3F,0x67,0x64,0xE6,0xFF,0x9C,0x9F,0x93,0xE7,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0x3F,0x67,0xE6,0xF0,0xFF,0x9C,0x9F,0xC7,0xE7,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

#define High_temp 7         //define high_temp mark
#define Error 6             //define error mark

union swt_float
{
    char i[4];
    float j;
}
//float k=myfloat.j;
//add the test file to git task hahah
/*
#define ONE_WIRE_BUS 14    //define a one_wire port
OneWire oneWire(ONE_WIRE_BUS);
DallasTemperature sensors(&oneWire);
// arrays to hold device address
DeviceAddress Device0, Device1, Device2;
*/

//define the oled orginal state
#define OLED_RST 12
U8GLIB_NHD27OLED_2X_BW u8g(13, 11, 10, 9);  // SPI Com: SCK = 13, MOSI = 11, CS = 10, A0 = 9

void draw(void)
{  
  //*************** thermo temp sense *********************
  u8g.setFont(u8g_font_helvB12r);
  if (serial_temp>26)
  {
  u8g.drawStr(0, 60, "System Working");
  }
  else if(serial_temp <= 28)
  {
  u8g.drawStr(0, 60, "System Standby");
  }
  u8g.setPrintPos(88, 15);
  u8g.print("o");
  u8g.setFont(u8g_font_fub30r);//字体设置
  u8g.setPrintPos(5, 40);
  u8g.print(serial_temp, 1);
  u8g.setPrintPos(95, 40);
  u8g.print("C");
  delay(5);
}


void setup()
{  
  // start serial port
  pinMode(Error, OUTPUT);
  pinMode(High_temp, OUTPUT);
  digitalWrite(High_temp, HIGH);
  digitalWrite(Error, HIGH);    
  //pinMode(OLED_RST, OUTPUT);
  
  digitalWrite(OLED_RST, LOW);
  delay(100);
  digitalWrite(OLED_RST, HIGH);
  u8g.begin();//display init
  u8g.firstPage();
   do{
  u8g.drawXBMP( 0, 0, 128, 64, u8g_logo_bits);
   } while( u8g.nextPage() ); 
  delay(2000);
 
  Serial.begin(115200);
 // init the ds18b20
  Serial.println("OLED is Starting......");
  Serial.print("Locating devices...");
  sensors.begin();
  Serial.print("Found ");
  Serial.print(sensors.getDeviceCount(), DEC);
  Serial.println(" devices.");


  // report parasite power requirements
  Serial.print("Parasite power is: ");
  if (sensors.isParasitePowerMode()) Serial.println("ON");
  else Serial.println("OFF");
  if (!sensors.getAddress(Device0, 0)) Serial.println("Unable to find address for Device0");
  sensors.setResolution(Device0, 11);
  Serial.print("Device0 Resolution: ");
  Serial.print(sensors.getResolution(Device0), DEC);
  Serial.println();
}

void loop()
{

  if (Serial.available()) 
  {  delay(100);
    serial_temp =Serial.parseFloat();
    Serial.print("serial_temp is");
    Serial.println(serial_temp);
  }
  
  sensors.requestTemperatures();   //发送温度测量请求命令
  get_temp = sensors.getTempCByIndex(0);
  //Serial.print("DS18B20 is: ");
  //Serial.println(get_temp-3);  //获取0号传感器温度数据并发送
  u8g.firstPage();
  do {
    draw();
    //Serial.print("LCD is working: ");
  }
  while ( u8g.nextPage() );

}

